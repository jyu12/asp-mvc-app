@model Newbly.ViewModels.CustomerFormViewModel

<h2>@Model.Title</h2>

@using (@Html.BeginForm("Save", "Customers"))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Birthdate)
        @*<label for="Birthdate">Date of Birth</label> // for Changing the Model data
            As oppose to changing the view via Annontations on the Entity*@
        @Html.TextBoxFor(m => m.Customer.Birthdate, "{0: MM/dd/yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Birthdate)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeId)
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select Type", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)
    </div>

    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsletter) Subscribe to Newsletter?
        </label>
    </div>

    @* Example using AntiForgeryToken to prevent CSRF and XSS attacks *@
    @Html.AntiForgeryToken()
    <div>
        <button type="submit" class="btn btn-primary">
            @if (Model.Customer.Id == 0)
            {
                @:Add
            }
            else
            {
                @:Update
            }
        </button>
    </div>
}

@section scripts
{
    @*Go to Network in developer tool of broswer to check if client side script is working*@
    @Scripts.Render("~/bundles/jqueryval")
}
